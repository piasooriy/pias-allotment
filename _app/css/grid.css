/* Using the exmple that Alejandro showed us
during our last lecture!!! The grid sort-of fixes 95%
of our issues with responsivity, and it makes it easier
to place objects in HTML */

.grid {
	width: 100%; 
	display: grid;
	grid-template-columns: repeat(12, 1fr);
	align-items: flex-start;
	column-gap: var(--gap-column);
	row-gap: var(--gap-row);
}

/* How should I split up the media-queries for 
table and mobile
* use dwh? no. use REM instead, 
Info from Carlo: 
* mobile: 
- 1024px
* desktop:
- 1440px
have something tablet : minwidth 1024 and maxwidth 1440
*/

@media screen and (max-width: 1024px) {
	.grid__column--1,
	.grid__column--2,
	.grid__column--3,
	.grid__column--4,
	.grid__column--5,
	.grid__column--6,
	.grid__column--7,
	.grid__column--8,
	.grid__column--9,
	.grid__column--10,
	.grid__column--11,
	.grid__column--12 {
		grid-column-end: span 12;
	}
}



@media screen and (min-width: 1440px) {
	.grid__column--1 {
		grid-column-end: span 1;
	}

	.grid__column--2 {
		grid-column-end: span 2;
	}

	.grid__column--3 {
		grid-column-end: span 3;
	}

	.grid__column--4 {
		grid-column-end: span 4;
	}
	.grid__column--5 {
		grid-column-end: span 5;
	}
	.grid__column--6 {
		grid-column-end: span 6;
	}
	.grid__column--7 {
		grid-column-end: span 7;
	}
	.grid__column--8 {
		grid-column-end: span 8;
	}
	.grid__column--9 {
		grid-column-end: span 9;
	}
	.grid__column--10 {
		grid-column-end: span 10;
	}
	.grid__column--11 {
		grid-column-end: span 11;
	}
	.grid__column--12 {
		grid-column-end: span 12;
	}
}
